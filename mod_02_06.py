
# Задание "Слишком древний шифр":
# Вы отправились в путешествие на необитаемый остров и конечно же в очередной вылазке в джунгли вы попали в
# ловушку местному племени (да-да, классика "Индиана Джонса").
# К вашему удивлению, в племени были неплохие математики и по совместительству фантазёры.
# Вы поняли это, когда после долгих блужданий перед вами появились ворота (выход из ловушки) с
# двумя каменными вставками для чисел.
# В первом поле камни с числом менялись постоянно (от 3 до 20) случайным образом, а
# второе было всегда пустым.
#
# К вашему счастью рядом с менее успешными и уже неговорящими путешественниками находился папирус,
# где были написаны правила для решения этого "ребуса". (Как жаль, что они поняли это так поздно :( ).
#
# Во вторую вставку нужно было написать те пары чисел друг за другом, чтобы число из первой вставки
# было кратно(делилось без остатка) сумме их значений.


def parol(n):
    # заготовим строку и множество
    result = ''
    result_set = set()

    # переберем все пары чисел двойным циклом
    for i in range(1, n):
        for k in range(1 + i, n):

            # проверяем пару чисел i и k на условие кратности
            # чтобы число из первой вставки было кратно (делилось без остатка) их сумме
            if n % (i + k) == 0:

                # пары чисел могут повторяться
                # проверяем нашу пару чисел на повторение
                if_set = {(i, k)}
                if not (if_set in result_set):
                    # записываем числа в пароль
                    result += f'{i}{k}'

                # заполняем наше множество отработанными парами чисел
                # для проверки на повторение
                result_set.add((i, k))
                result_set.add((k, i))

    return result

print(parol(9))
print(parol(11))
